name: expense-manager
services:
  api:
    command: ["php-fpm"]
    develop:
      watch:
        - action: sync
          path: ${API_PATH}
          target: /var/www/html
          ignore:
            - .git
            - node_modules/
            - vendor/
            - storage/
        - action: rebuild
          path: ${API_PATH}/composer.json
        - action: rebuild
          path: ${API_PATH}/composer.lock
    environment:
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_CURRENCY: ${APP_CURRENCY}
      SANCTUM_STATEFUL_DOMAINS: "127.0.0.1:8080"
      APP_URL: "http://127.0.0.1:8080"
      OPEN_EXCHANGE_APP_ID: ${OPEN_EXCHANGE_APP_ID}
      EXCHANGE_RATE_PROVIDER: ${EXCHANGE_RATE_PROVIDER}
    build:
      context: ./api
      dockerfile: Dockerfile.dev
      additional_contexts:
        source: ${API_PATH}
    depends_on:
      - postgres
    networks:
      - expenses
    configs:
      - source: php_config
        target: /usr/local/etc/php/conf.d/99-app.ini
      - source: xdebug_config
        target: /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - source: fpm_config
        target: /usr/local/etc/php-fpm.d/www.conf
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
  api-cron:
    extends:
      service: api
    depends_on:
      - api
    command: ["php", "artisan", "schedule:work"]
  vue:
    develop:
      watch:
        - action: sync
          path: ${VUE_PATH}
          target: /var/www/html
          ignore:
            - .git
            - .vscode
            - node_modules
        - action: rebuild
          path: ${API_PATH}/package.json
        - action: rebuild
          path: ${API_PATH}/package-lock.json
    build:
      context: ./vue
      dockerfile: Dockerfile.dev
      additional_contexts:
        source: ${VUE_PATH}
    depends_on:
      - api
    networks:
      - expenses
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
  postgres:
    image: postgres
    shm_size: 128mb
    environment:
      PGUSER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - expenses
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 1s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 254M
        reservations:
          cpus: "0.25"
          memory: 128M
  nginx:
    image: nginx:stable-alpine
    ports:
      - 127.0.0.1:8080:80/tcp
    networks:
      - expenses
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - vue
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
        reservations:
          cpus: "0.12"
          memory: 64M
  pgweb:
    image: sosedoff/pgweb
    networks:
      - expenses
    depends_on:
      - api
    ports:
      - 127.0.0.1:8081:8081/tcp
    environment:
      PGWEB_URL_PREFIX: "pgweb"
      PGWEB_DATABASE_URL: "postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT:-5432}/${DB_DATABASE}?sslmode=${DB_SSL_MODE:-disable}"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 64M
        reservations:
          cpus: "0.12"
          memory: 32M
volumes:
  pgdata:
    driver: local
networks:
  expenses:
    driver: bridge 
configs:
  xdebug_config:
    file: ./api/xdebug.ini
  php_config:
    file: ./api/php.ini
  nginx_config:
    file: ./nginx/default.conf
  fpm_config:
    file: ./api/www.conf